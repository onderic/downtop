paths:
  /categories:
    post:
      summary: Create a new category
      description: Creates a new category
      operationId: createCategory
      tags:
        - Category
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCategorySchema'
      responses:
        '201':
          description: Category created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySchema'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    get:
      summary: Get all categories
      description: Retrieves a list of all categories
      operationId: getAllCategories
      tags:
        - Category
      responses:
        '200':
          description: Successfully retrieved categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategorySchema'

  /categories/{categoryId}:
    get:
      summary: Get a category
      description: Retrieves a category by ID
      operationId: getCategoryById
      tags:
        - Category
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: number
          description: Category ID
      responses:
        '200':
          description: Successfully retrieved category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySchema'
        '404':
          description: Category not found

    put:
      summary: Update a category
      description: Updates an existing category
      operationId: updateCategory
      tags:
        - Category
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: number
          description: Category ID
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdateDTOSchema'
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySchema'
        '401':
          description: Unauthorized
        '404':
          description: Category not found

    delete:
      summary: Delete a category
      description: Deletes a category
      operationId: deleteCategory
      tags:
        - Category
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: number
          description: Category ID
      responses:
        '204':
          description: Category deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Category not found

components:
  schemas:
    NewCategorySchema:
      type: object
      properties:
        name:
          type: string
          description: Category name
        description:
          type: string
          description: Category description
      required:
        - name

    CategorySchema:
      allOf:
        - $ref: '#/components/schemas/NewCategorySchema'
        - type: object
          properties:
            id:
              type: string
              format: uuid
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time

    CategoryUpdateDTOSchema:
      type: object
      properties:
        name:
          type: string
          description: Updated category name
        description:
          type: string
          description: Updated category description
